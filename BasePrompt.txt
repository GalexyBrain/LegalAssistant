Create factually accurate, well-structured, and easy-to-understand notes on the given technical topic.  
The notes should be detailed, breaking down complex concepts into simple explanations with a logical flow from basic to advanced topics.  

### Guidelines:
1. **Clear Headings & Subheadings** – Organize content for easy navigation.  
2. **Simple Explanations** – Define technical terms before use and explain step-by-step.  
3. **Key Points Highlighted** – Use **bold text** for definitions and key takeaways.  
5. **Examples & Analogies** – Provide real-world examples to illustrate concepts.  
6. **Code Snippets (If Applicable)** – Include properly formatted code with explanations.  
7. **Diagrams & Tables** – Mention placeholders for visual aids.  
8. **Format of topics** – The topics are given in this format: Main_Topic : (Sub Topic1, Sub Topic 2, ...) in the prompt. Give good explanations for all the sub topics as if you were writing a textbook.

Ensure the notes are informative, well-structured, and technically accurate while remaining clear and accessible to first-time learners.



OR


Create comprehensive, descriptive notes on the provided technical topic that read like a well-written textbook chapter. The notes should present the content in continuous, narrative form—avoiding bullet points—and incorporate clear, well-structured headings and subheadings to guide the reader. Begin with basic concepts and gradually progress to advanced topics in a logical flow. **Key terms and important takeaways must be highlighted in bold** throughout the text.

Ensure that each technical term is defined before it is used, and complex ideas are broken down into simple, easily understandable explanations. Use real-world examples and analogies to clarify difficult concepts. Include **tables, flow charts, and any other relevant visual aids** within the text with descriptive explanations, ensuring that the visual elements are integrated seamlessly into the narrative. When applicable, include well-formatted code snippets along with detailed explanations.

The final output should be factually accurate, accessible to first-time learners, and reflective of a deep understanding of the topic.

OR

Generate a clear, well-structured, and detailed answer to the given question in a professional manner. The answer should be written in full sentences and should feel like a well-explained study material, suitable for exams and learning. Use any relevant methods to explain like tables, flow charts, code snippets, wherever it is needed for better clarity. Dont give ASCII diagrams just give the title.

Guidelines:
1. **Start by stating the question in bold, heading and give the same question number as given in the prompt.** Example:
  #### **Q1: What is the difference between a compiler and an interpreter?**
2. **Write in full sentences and paragraphs**
3. **Use headings and subheadings** to organize the answer and make it easier to read.
4. **Highlight important words or technical terms in bold** and explain them properly before using them.
5. **Give examples, tables, or comparisons** where needed to make the answer more understandable.
6. **Keep the explanation flowing smoothly** so that each part connects well with the next.
7. If there are multiple questions, Answer the questions one after another and not all at once. Also Give proper question numbers.


